/* Reset CSS */

html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video, * {
    box-sizing: border-box !important;
    padding: 0;
    margin: 0;
    border: 0;
    vertical-align: baseline;
}

pre {
    /* just display whitespace, no monospace, no blocks... */
    font-family: inherit;
    display: inline;
    white-space: pre-wrap;
}

table {
    border-collapse: collapse;
}

html {
    width: 100%;
    height: 100%;
    font-size: 62.5%;
    scroll-behavior: smooth;
}

/* Variables */

:root {
    --heading-color: #333333;
    --nav-color: #2980b9;
    --execute-color: #a82f23;
    --idle-color: #969696;
    --text-color: #333333;
    --hint-color: #7c7878;
    --border-color: #bbbbbb;
    --error-color: #de1212;
    --error-dark-color: #a82f23;
    --warning-color: #ffa322;
    --warning-dark-color: #ac7c00;
    --success-color: green;


    /* stolen colors from VSCode light theme */
    --syntax-class: #267f99;
    --syntax-prop: #001080;
    --syntax-literal: #a20d0d;
    --syntax-method: #795e26;
    --syntax-keyword: #0000ff;
    --syntax-pink: #af00db;
    --syntax-comment: #007f00;
    --syntax-value: #008557; /* CSS numeric values have this color */
    --syntax-value2: #0050a4; /* CSS unquoted string values have this color */
    --syntax-black: #000000;
    --font-monospace: "Droid Sans Mono", "Consolas", "monospace", monospace
}

/* Basic text */
body {
    font-family: "Segoe UI", Tahoma, sans-serif;
    font-size: 1.5rem;
    color: var(--text-color);
    margin: 1rem;
}

h1 {
    font-weight: normal;
    font-size: 3rem;
    font-style: italic;
    color: var(--heading-color);
    margin: 2rem 0;
}

h2 {
    font-style: normal;
    font-size: 2.4rem;
    font-weight: bold;
    margin: 1.5rem 0;
}

h3 {
    color: var(--nav-color);
    font-weight: normal;
    font-size: 1.8rem;
}

.summary {
    display: block;
    /* padding: 1.5rem 0; */
    font-size: 2rem;

    /* limit to 20 lines with fadeout effect (the message is repeated later, but now let's show the menu, source etc.) */
    max-height: 15em;
    overflow: hidden;
    text-overflow: ellipsis;
    mask-image: linear-gradient(180deg, #000 11em, transparent);
}

.hint-text {
    color: var(--hint-color)
}

.error-text {
    color: var(--error-dark-color)
}

.warning-text {
    color: var(--warning-dark-color)
}


/* Tables */
table {
    border-spacing: 0;
    margin: 0 0 2rem;
    width: 100%;
}

    table th {
        vertical-align: bottom;
        padding: 1rem;
        font-weight: 400;
        color: var(--hint-color);
        text-align: left;
    }

    table td {
        padding: 0.3rem 1rem;
    }

    table.nowrap th,
    table.nowrap td {
        white-space: nowrap;
        text-overflow: ellipsis;
        overflow: hidden;
        max-width: 40rem;
    }

    table th,
    table td {
        border-right: none;
        border-bottom: none;
        border-left: none;
        border-top: 0.1rem var(--border-color) solid;
        box-sizing: border-box;
    }
        table tr:first-child th, table tr:first-child td {
            border-top: none;
        }

        table tr.row-continues td {
            /* border-top: 0.1rem var(--border-color) dashed; */
            border-top: none;
        }

        table th.explosive,
        table td.explosive {
            width: 100%;
            max-width: 100%;
        }

        table th.fit,
        table td.fit {
            width: 1px;
        }

        table td.center,
        table th.center {
            text-align: center;
        }

    table tr.failure {
        background-color: var(--error-dark-color);
        color: white;
    }

        table tr.failure span,
        table tr.failure a {
            color: white;
        }

    table tr.success .status {
        color: var(--success-color);
    }


/* Source code */

.source .source-errorLine {
    color: var(--error-dark-color);
}

.errorUnderline {
    background-color: #fff7f7;
    border: 0.1rem solid #ff8888;
    color: #ff0909;
    padding: 0.2rem;
}

.source .source-warningLine {
    color: var(--warning-dark-color);
}

.warningUnderline {
    background-color: color-mix(in srgb, var(--warning-color) 20%, white 80%);
    border: 0.1rem solid color-mix(in srgb, var(--warning-color) 50%, white 50%);
    color: var(--warning-dark-color);
    padding: 0.2rem;
}

.code {
    font-family: var(--font-monospace);
}

.lineNumber {
    color: var(--hint-color);
}

.source.file {
    margin: 1rem 0 0.5rem 0;
    font-size: 1.2rem;
}

.object-obj,
.object-arr {
    padding-left: 1rem;
}

.object-browser .propname {
    font-weight: bold;
}

.docLinks {
    float: right;
}


/* Navigation */
input.collapse {
    display: none;
}

input[type="checkbox"].collapse ~ .collapse-on {
    display: none;
}

input[type="checkbox"]:checked.collapse ~ .collapse-on {
    display: inherit;
}

input[type="checkbox"]:checked.collapse ~ .collapse-off {
    display: none;
}

a {
    color: var(--nav-color);
    cursor: pointer;
    text-decoration: none;
}

nav {
    margin-top: 1.5rem;
}

.nav {
    display: inline-block;
    padding: 0.4rem 2rem;
    color: white;
    cursor: pointer;
    background-color: var(--idle-color);
}
    .nav:hover {
        background-color: color-mix(in srgb, var(--idle-color), black 20%)
    }

    .nav.active {
        background-color: var(--nav-color);
    }

.container {
    /* containers are hidden by default and shown using radio buttons */
    display: none;
}

/* Interaction */
input.execute, button.execute {
    background-color: var(--idle-color);
    padding: 0.4rem 2rem;
    color: white;
    cursor: pointer;
    border: none;
}

    input.execute:hover, button.execute:hover {
        background-color: var(--execute-color);
    }

a.execute {
    color: var(--text-color);
    cursor: pointer;
    font-weight: bold;
}

    a.execute:hover {
        color: var(--execute-color);
    }

.header-toolbox {
    float: right;
}

/* Decoration */
hr {
    border: none;
    height: 0.1rem;
    background-color: var(--idle-color);
    margin: 0.8rem 0;
}

/* Compile progress */
.compile-progress {
    position: fixed;
    top: 1rem;
    left: 0;
    right: 0;
    text-align: center;
}

    .compile-progress > div {
        display: inline-block;
        padding: 0.5rem;
        background-color: white;
        border: 0.1rem solid var(--border-color);
        min-width: 20rem;
    }

@keyframes blink {
    50% {
        color: transparent
    }
}

.compile-progress span {
    animation: 1s blink infinite
}

    .compile-progress span:nth-child(2) {
        animation-delay: 250ms
    }

    .compile-progress span:nth-child(3) {
        animation-delay: 500ms
    }

ul {
    margin: 1em;
}
    ul li {
        margin: .25em 1em;
    }

code {
    font-family: var(--font-monospace);
    color: var(--syntax-black);
}

.syntax-class, .syntax-typeparam, .syntax-interface {
    color: var(--syntax-class);
}
.syntax-prop {
    color: var(--syntax-prop);
}
.syntax-literal {
    color: var(--syntax-literal);
}
.syntax-method {
    color: var(--syntax-method);
}
.syntax-keyword {
    color: var(--syntax-keyword);
}
.syntax-pink {
    color: var(--syntax-pink);
}
.syntax-value {
    color: var(--syntax-value);
}
.syntax-value2 {
    color: var(--syntax-value2);
}
.syntax-black {
    color: var(--syntax-black);
}
.syntax-comment {
    color: var(--syntax-comment);
    font-style: italic;
}


.syntax-underline-error {
    text-decoration: var(--error-dark-color) wavy underline;
}
.syntax-underline-warning {
    text-decoration: var(--warning-dark-color) wavy underline;
}
.syntax-underline-info {
    text-decoration: var(--success-color) wavy underline;
}

code.element {
}
code.element .property-name {
    color: var(--syntax-prop);
}
code.element .tag-name {
    color: var(--syntax-keyword);
}
code.element .tag-prefix {
    color: var(--syntax-keyword);
}
code.element .control-name {
    color: var(--syntax-class);
}
code.element .class-name {
    color: var(--syntax-class);
}
code.element .attribute-name {
    color: var(--syntax-keyword);
}
code.element .attribute-value {
    color: var(--syntax-black);
}
code.location {
    font-weight: bold;
}
